<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<import resource="classpath:config/db-config.xml" />


	<!--<bean id="report" class="com.brilliance.batch.model.Report" scope="prototype" />-->
	<!--<bean id="BizCanvas" class="com.brilliance.batch.model.BizCanvas" scope="prototype" />-->
	<!--<bean id="XmlitemProcessor" class="com.brilliance.batch.job.processer.XmlitemProcessor" />-->

	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter" scope="step">
		<property name="resource" value="file:#{jobParameters['outputFilePath']}" />
		<!--<property name="resource" value="classpath:data/output/file-*.txt" />-->
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="MSG" />
		<property name="overwriteOutput" value="true" />
	</bean>

    <bean id="dbItemReader" class="org.mybatis.spring.batch.MyBatisPagingItemReader" scope="step">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
        <property name="queryId" value="com.brilliance.batch.mapper.db.BizCanvasMapper.getMaxWorkDate" />
		<property name="parameterValues">
			<map>
				<entry key="workdate" value="#{jobParameters['workdate']}"></entry>
				<entry key="bizcode" value="#{jobParameters['bizcode']}"></entry>
			</map>
		</property>
    </bean>


	<!--<bean id="dateBasedCriteriaReader"
		  class="org.mybatis.spring.batch.MyBatisPagingItemReader"
		  p:sqlSessionFactory-ref="batchReadingSessionFactory"
		  p:parameterValues-ref="datesParameters"
		  p:queryId="com.brilliance.batch.mapper.db.mapper.queryUserInteractionsOnSpecificTimeSlot"
		  p:pageSize="200"
		  scope="step"/>

	<util:map id="datesParameters" scope="step">
		<entry key="yesterday" value="#{jobExecutionContext['EXTRACTION_START_DATE']}"/>
		<entry key="today" value="#{jobExecutionContext['TODAY_DATE']}"/>
		<entry key="first_day_of_the_month" value="#{jobExecutionContext['FIRST_DAY_OF_THE_MONTH_DATE']}"/>
		<entry key="first_day_of_the_previous_month" value="#{jobExecutionContext['FIRST_DAY_OF_THE_PREVIOUS_MONTH_DATE']}"/>
	</util:map>-->


	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="marshallerProperties">
			<map>
				<!-- format : 默认 Boolean.false(Compact format)  -->
				<entry key="jaxb.formatted.output">
					<value type="java.lang.Boolean">true</value>
				</entry>
				<!-- xml Declaration :默认 Boolean.false -->
				<entry key="jaxb.fragment">
					<value type="java.lang.Boolean">false</value>
				</entry>
				<!-- xml encoding declaration: 默认 UTF-8 -->
				<entry key="jaxb.encoding" value="GBK"/>
			</map>
		</property>
		<property name="classesToBeBound">
			<list>
				<value>com.brilliance.batch.model.BizCanvas</value>
			</list>
		</property>
	</bean>


	<batch:job id="readTable">
		<batch:step id="step">
			<batch:tasklet>
				<!--<batch:chunk reader="dbItemReader" writer="xmlItemWriter" processor="XmlitemProcessor" commit-interval="10">-->
				<batch:chunk reader="dbItemReader" writer="xmlItemWriter" processor="XmlitemProcessor" commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

</beans>